#!/bin/bash

set -e

# Claude Code Sandbox
# Runs Claude Code in an isolated Docker container with GitHub-enforced branch protection

SCRIPT_VERSION="1.0.0"
IMAGE_NAME="claude-sandbox"
DEPLOY_KEY_PATH="$HOME/.ssh/sandbox_deploy_key"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Print usage
usage() {
    cat <<EOF
Usage: sandbox [OPTIONS] <git-repo-url>

Run Claude Code in an isolated Docker container with a cloned git repository.

Arguments:
  <git-repo-url>    Git repository URL (SSH or HTTPS format)
                    Examples:
                      git@github.com:user/repo.git
                      https://github.com/user/repo.git

Options:
  --network         Enable network access in container (disabled by default)
  --help            Show this help message

Security:
  - Claude runs with bypassed permissions (--dangerously-skip-permissions)
  - Pushing to protected branches blocked by GitHub deploy key restrictions
  - Container filesystem isolated from host
  - Container automatically destroyed on exit

Examples:
  sandbox git@github.com:user/repo.git
  sandbox https://github.com/user/repo.git --network

EOF
    exit 0
}

# Check if Docker is installed
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}Error: Docker is not installed${NC}"
        echo "Please install Docker: https://docs.docker.com/get-docker/"
        exit 1
    fi
}

# Check if sandbox image exists
check_image() {
    if ! docker image inspect "$IMAGE_NAME" &> /dev/null; then
        echo -e "${RED}Error: Sandbox image '$IMAGE_NAME' not found${NC}"
        echo "Please run install.sh first to build the sandbox image"
        exit 1
    fi
}

# Check if deploy key exists
check_deploy_key() {
    if [ ! -f "$DEPLOY_KEY_PATH" ]; then
        echo -e "${RED}Error: Deploy key not found at $DEPLOY_KEY_PATH${NC}"
        echo "Please run install.sh to generate the deploy key"
        exit 1
    fi
}

# Parse arguments
REPO_URL=""
ENABLE_NETWORK=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --help)
            usage
            ;;
        --network)
            ENABLE_NETWORK=true
            shift
            ;;
        -*)
            echo -e "${RED}Error: Unknown option $1${NC}"
            usage
            ;;
        *)
            if [ -z "$REPO_URL" ]; then
                REPO_URL="$1"
            else
                echo -e "${RED}Error: Multiple repository URLs provided${NC}"
                usage
            fi
            shift
            ;;
    esac
done

# Validate repo URL provided
if [ -z "$REPO_URL" ]; then
    echo -e "${RED}Error: Git repository URL required${NC}"
    usage
fi

# Run checks
check_docker
check_image
check_deploy_key

# Generate random container name
CONTAINER_NAME="claude-sandbox-$(date +%s)-$$"

# Extract repo name from URL for display
REPO_NAME=$(basename "$REPO_URL" .git)

echo -e "${GREEN}Claude Code Sandbox${NC}"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "Repository: $REPO_NAME"
echo "Container:  $CONTAINER_NAME"
echo "Network:    $([ "$ENABLE_NETWORK" = true ] && echo 'enabled' || echo 'isolated')"
echo "Deploy key: $DEPLOY_KEY_PATH"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""

# Build docker run command
DOCKER_ARGS=(
    "run"
    "--rm"                                    # Auto-remove on exit
    "-it"                                     # Interactive TTY
    "--name" "$CONTAINER_NAME"                # Container name
    "-v" "$DEPLOY_KEY_PATH:/root/.ssh/id_rsa:ro"  # Mount deploy key (read-only)
    "-e" "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY"   # Pass API key
)

# Add network isolation unless --network flag provided
if [ "$ENABLE_NETWORK" = false ]; then
    DOCKER_ARGS+=("--network" "none")
fi

DOCKER_ARGS+=("$IMAGE_NAME")

# Create startup script to run inside container
DOCKER_ARGS+=("bash" "-c" "cat <<'STARTUP_SCRIPT' | bash
set -e

# Add GitHub to known hosts
ssh-keyscan github.com >> /root/.ssh/known_hosts 2>/dev/null

echo 'Cloning repository...'
if ! git clone '$REPO_URL' repo 2>&1; then
    echo ''
    echo 'Error: Failed to clone repository'
    echo 'This might be because:'
    echo '  1. The deploy key is not added to GitHub'
    echo '  2. The repository URL is incorrect'
    echo '  3. Network access is disabled (use --network flag)'
    echo ''
    exit 1
fi

cd repo

echo ''
echo 'Repository cloned successfully!'
echo ''
echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
echo 'Starting Claude Code with bypassed permissions...'
echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
echo ''

# Launch Claude Code with bypassed permissions
exec claude --dangerously-skip-permissions

STARTUP_SCRIPT
")

# Run the container
echo "Launching sandbox container..."
echo ""

docker "${DOCKER_ARGS[@]}"

# Cleanup message (shown after container exits)
echo ""
echo -e "${GREEN}Sandbox session ended${NC}"
echo "Container has been automatically removed"
